INFO:heterogeneous-GAT-model:[1] Loss: 0.0003425672948360443
Traceback (most recent call last):
  File "C:\Users\liamb\Documents\graph4stackoverflow\embeddings\hetero_GAT.py", line 178, in <module>
    train_acc, train_f1 = test(train_loader)
  File "C:\Users\liamb\Documents\graph4stackoverflow\embeddings\hetero_GAT.py", line 109, in test
    predictions.append(pred.item())
ValueError: only one element tensors can be converted to Python scalars
BatchedHeteroDataBatch(
  question_emb=[16, 1536],
  answer_emb=[16, 1536],
  label=[16, 1],
  [1mquestion[22m={
    x=[71, 1536],
    batch=[71],
    ptr=[17]
  },
  [1manswer[22m={
    x=[112, 1536],
    batch=[112],
    ptr=[17]
  },
  [1mcomment[22m={
    x=[95, 768],
    batch=[95],
    ptr=[17]
  },
  [1mtag[22m={
    x=[411, 50],
    batch=[411],
    ptr=[17]
  },
  [1mmodule[22m={
    x=[15, 30],
    batch=[15],
    ptr=[17]
  },
  [1m(tag, describes, question)[22m={ edge_index=[2, 161] },
  [1m(tag, describes, answer)[22m={ edge_index=[2, 233] },
  [1m(tag, describes, comment)[22m={ edge_index=[2, 189] },
  [1m(module, imported_in, question)[22m={ edge_index=[2, 3] },
  [1m(module, imported_in, answer)[22m={ edge_index=[2, 15] },
  [1m(question, rev_describes, tag)[22m={ edge_index=[2, 161] },
  [1m(answer, rev_describes, tag)[22m={ edge_index=[2, 233] },
  [1m(comment, rev_describes, tag)[22m={ edge_index=[2, 189] },
  [1m(question, rev_imported_in, module)[22m={ edge_index=[2, 3] },
  [1m(answer, rev_imported_in, module)[22m={ edge_index=[2, 15] }
)
DATA IN torch.Size([16, 1536]) torch.Size([16, 1536])
IN torch.Size([16, 3072])
B4 LINEAR torch.Size([16, 3392])
BatchedHeteroDataBatch(
  question_emb=[12, 1536],
  answer_emb=[12, 1536],
  label=[12, 1],
  [1mquestion[22m={
    x=[44, 1536],
    batch=[44],
    ptr=[13]
  },
  [1manswer[22m={
    x=[92, 1536],
    batch=[92],
    ptr=[13]
  },
  [1mcomment[22m={
    x=[78, 768],
    batch=[78],
    ptr=[13]
  },
  [1mtag[22m={
    x=[320, 50],
    batch=[320],
    ptr=[13]
  },
  [1mmodule[22m={
    x=[13, 30],
    batch=[13],
    ptr=[13]
  },
  [1m(tag, describes, question)[22m={ edge_index=[2, 91] },
  [1m(tag, describes, answer)[22m={ edge_index=[2, 188] },
  [1m(tag, describes, comment)[22m={ edge_index=[2, 162] },
  [1m(module, imported_in, question)[22m={ edge_index=[2, 0] },
  [1m(module, imported_in, answer)[22m={ edge_index=[2, 16] },
  [1m(question, rev_describes, tag)[22m={ edge_index=[2, 91] },
  [1m(answer, rev_describes, tag)[22m={ edge_index=[2, 188] },
  [1m(comment, rev_describes, tag)[22m={ edge_index=[2, 162] },
  [1m(question, rev_imported_in, module)[22m={ edge_index=[2, 0] },
  [1m(answer, rev_imported_in, module)[22m={ edge_index=[2, 16] }
)
DATA IN torch.Size([12, 1536]) torch.Size([12, 1536])
IN torch.Size([12, 3072])
B4 LINEAR torch.Size([12, 3392])
IN torch.Size([16, 3072])
B4 LINEAR torch.Size([16, 3392])
torch.Size([16, 2]) torch.Size([16, 1])